/* ----------------------------------------------------------------------- *//**
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 *//* ----------------------------------------------------------------------- */

\i m4_regexp(MADLIB_LIBRARY_PATH, `\(.*\)/lib',
              `\1/../modules/pmml/test/pmml.setup.sql_in'
)
 \i m4_regexp(MADLIB_LIBRARY_PATH, `\(.*\)/lib',
              `\1/../modules/pmml/test/pmml.setup.datasets.sql_in'
)

m4_changequote(`<!'', `!>'')

--------------------- linear regression -----------------------
DROP TABLE IF EXISTS linregr_model, linregr_model_summary;
SELECT linregr_train(
    'houses',
    'linregr_model',
    'price',
    'array[1, bedroom, bath, size]',
    'g1, g2'
);

SELECT assert(
    count_expected_names('linregr_model',
        NULL,
        ARRAY['price_pmml_prediction', 'bedroom', 'bath', 'size', 'g1', 'g2']
    ) = 6,
    text(pmml('linregr_model')));

SELECT assert(
    count_expected_names('linregr_model',
        'c.price ~ c.bedroom + c.bath + c.size',
        ARRAY['c.price', 'c.bedroom', 'c.bath', 'c.size']
    ) = 4,
    text(pmml('linregr_model',
              'c.price ~ c.bedroom + c.bath + c.size')));

SELECT assert(
    count_expected_names('linregr_model',
        '{c.price, c.bedroom, c.bath, c.size}'::varchar[],
        ARRAY['c.price', 'c.bedroom', 'c.bath', 'c.size']
    ) = 4,
    text(pmml('linregr_model',
              'c.price ~ c.bedroom + c.bath + c.size')));

SELECT assert(
    count_expected_names('linregr_model',
        '{c.price, c.bedroom, c.bath, c.size}',
        ARRAY['c.price', 'c.bedroom', 'c.bath', 'c.size']
    ) = 4,
    text(pmml('linregr_model',
              'c.price ~ c.bedroom + c.bath + c.size')));

SELECT assert(
    count_expected_names('linregr_model',
        'c.bedroom + c.bath + c.size',
        ARRAY['price', 'c.bedroom', 'c.bath', 'c.size']
    ) = 4,
    text(pmml('linregr_model',
              'c.bedroom + c.bath + c.size')));

SELECT assert(
    count_expected_names('linregr_model',
        'c.bedroom, c.bath, c.size',
        ARRAY['price', 'c.bedroom', 'c.bath', 'c.size']
    ) = 4,
    text(pmml('linregr_model',
              'c.bedroom, c.bath, c.size')));

--------------------- logistic regression -----------------------
DROP TABLE IF EXISTS logregr_model, logregr_model_summary;
SELECT logregr_train(
    '"Patients"',
    'logregr_model',
    '"Second_attack"',
    'ARRAY[1, "Treatment", trait_anxiety]',
    NULL,
    20,
    'irls'
);

SELECT assert(
    count_expected_names('logregr_model',
        NULL,
        ARRAY['Second_attack_pmml_prediction', 'Treatment', 'trait_anxiety']
    ) = 3,
    text(pmml('logregr_model')));

SELECT assert(
    count_expected_names('logregr_model',
        'c.second_attack ~ c.treatment + c.anxiety',
        ARRAY['c.second_attack', 'c.treatment', 'c.anxiety']
    ) = 3,
    text(pmml('logregr_model',
              'c.second_attack ~ c.treatment + c.anxiety')));

SELECT assert(
    count_expected_names('logregr_model',
        '{c.second_attack, c.treatment, c.anxiety}'::varchar[],
        ARRAY['c.second_attack', 'c.treatment', 'c.anxiety']
    ) = 3,
    text(pmml('logregr_model',
              '{c.second_attack, c.treatment, c.anxiety}')));

SELECT assert(
    count_expected_names('logregr_model',
        '{c.second_attack, c.treatment, c.anxiety}',
        ARRAY['c.second_attack', 'c.treatment', 'c.anxiety']
    ) = 3,
    text(pmml('logregr_model',
              '{c.second_attack, c.treatment, c.anxiety}')));

SELECT assert(
    count_expected_names('logregr_model',
        'c.treatment + c.anxiety',
        ARRAY['Second_attack', 'c.treatment', 'c.anxiety']
    ) = 3,
    text(pmml('logregr_model',
              'c.treatment + c.anxiety')));

SELECT assert(
    count_expected_names('logregr_model',
        'c.treatment, c.anxiety',
        ARRAY['Second_attack', 'c.treatment', 'c.anxiety']
    ) = 3,
    text(pmml('logregr_model',
              'c.treatment, c.anxiety')));

SELECT assert(
    count_expected_names('logregr_model',
        'c.treatment, c.trait_anxiety',
        ARRAY['Second_attack', 'c.treatment', 'c.trait_anxiety']
    ) = 3,
    text(pmml('logregr_model',
              'c.treatment, c.trait_anxiety')));
