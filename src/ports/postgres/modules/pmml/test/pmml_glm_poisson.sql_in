\i m4_regexp(MADLIB_LIBRARY_PATH,
             `\(.*\)/lib',
              `\1/../modules/pmml/test/pmml.setup.sql_in'
)
\i m4_regexp(MADLIB_LIBRARY_PATH, `\(.*\)/lib',
              `\1/../modules/pmml/test/pmml.setup.datasets.sql_in'
)

m4_changequote(`<!'', `!>'')

DROP TABLE IF EXISTS warpbreaks CASCADE;

-------------------- with intercept ------------------------------
DROP TABLE IF EXISTS glm_model_sqrt, glm_model_sqrt_summary;
SELECT glm('warpbreaks_dummy',
           'glm_model_sqrt',
           'breaks',
           'ARRAY[1.0, "wool_B","tension_M", "tension_H"]',
           'family=poisson, link=sqrt');

-- Test predicted value
DROP TABLE IF EXISTS glm_predict_poisson_sqrt_out; CREATE TABLE glm_predict_poisson_sqrt_out as SELECT id, glm_predict(coef, ARRAY[1, "wool_B","tension_M", "tension_H"], 'sqrt')
FROM glm_model_sqrt, warpbreaks_dummy;
SELECT test_pmml_output('warpbreaks_dummy', 'glm_model_sqrt', 'glm_predict_poisson_sqrt_out', 'id', 'glm_predict', 'predicted_breaks_pmml_prediction');

DROP TABLE IF EXISTS glm_model_log, glm_model_log_summary;
SELECT glm('warpbreaks_dummy',
           'glm_model_log',
           'breaks',
           'ARRAY[1, "wool_B","tension_M", "tension_H"]',
           'family=poisson, link=log');

-- Test predicted value
DROP TABLE IF EXISTS glm_predict_poisson_log_out; CREATE TABLE glm_predict_poisson_log_out as SELECT id, glm_predict(coef, ARRAY[1, "wool_B","tension_M", "tension_H"], 'log')
FROM glm_model_log, warpbreaks_dummy;
SELECT test_pmml_output('warpbreaks_dummy', 'glm_model_log', 'glm_predict_poisson_log_out', 'id', 'glm_predict', 'predicted_breaks_pmml_prediction');

DROP TABLE IF EXISTS glm_model_identity, glm_model_identity_summary;
SELECT glm('warpbreaks_dummy',
           'glm_model_identity',
           'breaks',
           'ARRAY[1.0, "wool_B","tension_M", "tension_H"]',
           'family=poisson, link=identity', 'g');

-- Test predicted value
DROP TABLE IF EXISTS glm_predict_poisson_identity_out; CREATE TABLE glm_predict_poisson_identity_out as SELECT id, glm_model_identity.g, glm_predict(coef, ARRAY[1, "wool_B","tension_M", "tension_H"], 'identity')
FROM glm_model_identity, warpbreaks_dummy;
SELECT test_pmml_output('warpbreaks_dummy', 'glm_model_identity', 'glm_predict_poisson_identity_out', 'id', 'glm_predict', 'predicted_breaks_pmml_prediction', 'g');

-------------------- without intercept ------------------------------
-- TODO: create item for fixing the glm module when link='sqrt'/'identity' and no intercept is used
DROP TABLE IF EXISTS glm_model_log_nointercept, glm_model_log_nointercept_summary;
SELECT glm('warpbreaks_dummy',
           'glm_model_log_nointercept',
           'breaks',
           'ARRAY["wool_B","tension_M", "tension_H"]',
           'family=poisson, link=log');

-- Test predicted value
DROP TABLE IF EXISTS glm_predict_poisson_log_out; CREATE TABLE glm_predict_poisson_log_out as SELECT id, glm_predict(coef, ARRAY["wool_B","tension_M", "tension_H"], 'log')
FROM glm_model_log_nointercept, warpbreaks_dummy;
SELECT test_pmml_output('warpbreaks_dummy', 'glm_model_log_nointercept', 'glm_predict_poisson_log_out', 'id', 'glm_predict', 'predicted_breaks_pmml_prediction');
