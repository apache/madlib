\i m4_regexp(MADLIB_LIBRARY_PATH,
             `\(.*\)/lib',
              `\1/../modules/pmml/test/pmml.setup.sql_in'
)

m4_changequote(`<!'', `!>'')

DROP TABLE IF EXISTS abalone_identity_out, abalone_identity_out_summary;
SELECT glm(
    'abalone',
    'abalone_identity_out',
    'rings',
    'ARRAY[1.0, length, diameter, height, whole, shucked, viscera, shell]',
    'family=gaussian, link=identity', NULL, 'max_iter=1000, tolerance=1e-16'
);

DROP TABLE IF EXISTS glm_predict_normal_out; CREATE TABLE glm_predict_normal_out as SELECT id, glm_predict(coef, ARRAY[1, length, diameter, height, whole, shucked, viscera, shell], 'identity')
FROM abalone_identity_out, abalone;
SELECT test_pmml_output('abalone', 'abalone_identity_out', 'glm_predict_normal_out', 'id', 'glm_predict', 'predicted_rings_pmml_prediction');

DROP TABLE IF EXISTS abalone_log_out, abalone_log_out_summary;
SELECT glm(
    'abalone',
    'abalone_log_out',
    'rings',
    'ARRAY[1, length, diameter, height, whole, shucked, viscera, shell]',
    'family=gaussian, link=log', NULL, 'max_iter=1000, tolerance=1e-16'
);

DROP TABLE IF EXISTS glm_predict_normal_out; CREATE TABLE glm_predict_normal_out as SELECT id, glm_predict(coef, ARRAY[1, length, diameter, height, whole, shucked, viscera, shell], 'log')
FROM abalone_log_out, abalone;
SELECT test_pmml_output('abalone', 'abalone_log_out', 'glm_predict_normal_out', 'id', 'glm_predict', 'predicted_rings_pmml_prediction');

DROP TABLE IF EXISTS abalone_inverse_out, abalone_inverse_out_summary;
SELECT glm(
    'abalone',
    'abalone_inverse_out',
    'rings',
    'ARRAY[1, length, diameter, height, whole, shucked, viscera, shell]',
    'family=gaussian, link=inverse', NULL, 'max_iter=1000, tolerance=1e-16'
);

DROP TABLE IF EXISTS glm_predict_normal_out; CREATE TABLE glm_predict_normal_out as SELECT id, glm_predict(coef, ARRAY[1, length, diameter, height, whole, shucked, viscera, shell], 'inverse')
FROM abalone_inverse_out, abalone;
SELECT test_pmml_output('abalone', 'abalone_inverse_out', 'glm_predict_normal_out', 'id', 'glm_predict', 'predicted_rings_pmml_prediction');


------------------------ without intercept ------------------------------------------------------------
DROP TABLE IF EXISTS abalone_identity_out_nointercept, abalone_identity_out_nointercept_summary;
SELECT glm(
    'abalone',
    'abalone_identity_out_nointercept',
    'rings',
    'ARRAY[length, diameter, height, whole, shucked, viscera, shell]',
    'family=gaussian, link=identity', NULL, 'max_iter=1000, tolerance=1e-16'
);

DROP TABLE IF EXISTS glm_predict_normal_out; CREATE TABLE glm_predict_normal_out as SELECT id, glm_predict(coef, ARRAY[length, diameter, height, whole, shucked, viscera, shell], 'identity')
FROM abalone_identity_out_nointercept, abalone;
SELECT test_pmml_output('abalone', 'abalone_identity_out_nointercept', 'glm_predict_normal_out', 'id', 'glm_predict', 'predicted_rings_pmml_prediction');

DROP TABLE IF EXISTS abalone_log_out_nointercept, abalone_log_out_nointercept_summary;
SELECT glm(
    'abalone',
    'abalone_log_out_nointercept',
    'rings',
    'ARRAY[length, diameter, height, whole, shucked, viscera, shell]',
    'family=gaussian, link=log', NULL, 'max_iter=1000, tolerance=1e-16'
);

DROP TABLE IF EXISTS glm_predict_normal_out; CREATE TABLE glm_predict_normal_out as SELECT id, glm_predict(coef, ARRAY[length, diameter, height, whole, shucked, viscera, shell], 'log')
FROM abalone_log_out_nointercept, abalone;
SELECT test_pmml_output('abalone', 'abalone_log_out_nointercept', 'glm_predict_normal_out', 'id', 'glm_predict', 'predicted_rings_pmml_prediction');

DROP TABLE IF EXISTS abalone_inverse_out_nointercept, abalone_inverse_out_nointercept_summary;
SELECT glm(
    'abalone',
    'abalone_inverse_out_nointercept',
    'rings',
    'ARRAY[length, diameter, height, whole, shucked, viscera, shell]',
    'family=gaussian, link=inverse', NULL, 'max_iter=1000, tolerance=1e-16'
);

DROP TABLE IF EXISTS glm_predict_normal_out; CREATE TABLE glm_predict_normal_out as SELECT id, glm_predict(coef, ARRAY[length, diameter, height, whole, shucked, viscera, shell], 'inverse')
FROM abalone_inverse_out_nointercept, abalone;
SELECT test_pmml_output('abalone', 'abalone_inverse_out_nointercept', 'glm_predict_normal_out', 'id', 'glm_predict', 'predicted_rings_pmml_prediction');


------------------------ with 0 intercept ------------------------------------------------------------
DROP TABLE IF EXISTS abalone_identity_out_zerointercept, abalone_identity_out_zerointercept_summary;
SELECT glm(
    'abalone',
    'abalone_identity_out_zerointercept',
    'rings',
    'ARRAY[0, length, diameter, height, whole, shucked, viscera, shell]',
    'family=gaussian, link=identity', NULL, 'max_iter=1000, tolerance=1e-16'
);

DROP TABLE IF EXISTS glm_predict_normal_out; CREATE TABLE glm_predict_normal_out as SELECT id, glm_predict(coef, ARRAY[0, length, diameter, height, whole, shucked, viscera, shell], 'identity')
FROM abalone_identity_out_zerointercept, abalone;
SELECT test_pmml_output('abalone', 'abalone_identity_out_zerointercept', 'glm_predict_normal_out', 'id', 'glm_predict', 'predicted_rings_pmml_prediction');
