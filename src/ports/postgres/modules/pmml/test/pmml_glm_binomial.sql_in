\i m4_regexp(MADLIB_LIBRARY_PATH,
             `\(.*\)/lib',
              `\1/../modules/pmml/test/pmml.setup.sql_in'
)
 \i m4_regexp(MADLIB_LIBRARY_PATH, `\(.*\)/lib',
              `\1/../modules/pmml/test/pmml.setup.datasets.sql_in'
)

m4_changequote(`<!'', `!>'')

----------------------- binomial with probit -------------------------------
DROP TABLE IF EXISTS abalone_binomial_out, abalone_binomial_out_summary;
SELECT glm(
    'abalone',
    'abalone_binomial_out',
    'rings < 10',
    'ARRAY[1, length, diameter, height, whole, shucked, viscera, shell]',
    'family=binomial, link=probit', NULL, 'max_iter=1000, tolerance=1e-16'
);

-- Test probabilities
DROP TABLE IF EXISTS glm_predict_binomial_probit_out; CREATE TABLE glm_predict_binomial_probit_out as SELECT id, glm_predict(coef, ARRAY[1, length, diameter, height, whole, shucked, viscera, shell], 'probit')
FROM abalone_binomial_out, abalone;
SELECT test_pmml_output('abalone', 'abalone_binomial_out', 'glm_predict_binomial_probit_out', 'id', 'glm_predict', 'probability_true');

-- Test output category
DROP TABLE IF EXISTS glm_predict_binomial_probit_out; CREATE TABLE glm_predict_binomial_probit_out as SELECT id, glm_predict_binomial(coef, ARRAY[1, length, diameter, height, whole, shucked, viscera, shell], 'probit')
FROM abalone_binomial_out, abalone;
SELECT test_pmml_output('abalone', 'abalone_binomial_out', 'glm_predict_binomial_probit_out', 'id', 'glm_predict_binomial', 'predicted_(rings < 10)_pmml_prediction');

----------------------- binomial with logit -------------------------------
DROP TABLE IF EXISTS abalone_binomial_logit_out, abalone_binomial_logit_out_summary;
SELECT glm(
    'abalone',
    'abalone_binomial_logit_out',
    'rings < 10',
    'ARRAY[1.0, length, diameter, height, whole, shucked, viscera, shell]',
    'family=binomial, link=logit', NULL, 'max_iter=1000, tolerance=1e-16'
);

-- Test probabilities
DROP TABLE IF EXISTS glm_predict_binomial_logit_out; CREATE TABLE glm_predict_binomial_logit_out as SELECT id, glm_predict(coef, ARRAY[1, length, diameter, height, whole, shucked, viscera, shell], 'logit')
FROM abalone_binomial_logit_out, abalone;
SELECT test_pmml_output('abalone', 'abalone_binomial_logit_out', 'glm_predict_binomial_logit_out', 'id', 'glm_predict', 'probability_true');

-- Test output category
DROP TABLE IF EXISTS glm_predict_binomial_logit_out; CREATE TABLE glm_predict_binomial_logit_out as SELECT id, glm_predict_binomial(coef, ARRAY[1, length, diameter, height, whole, shucked, viscera, shell], 'logit')
FROM abalone_binomial_logit_out, abalone;
SELECT test_pmml_output('abalone', 'abalone_binomial_logit_out', 'glm_predict_binomial_logit_out', 'id', 'glm_predict_binomial', 'predicted_(rings < 10)_pmml_prediction');


------------------------------------------------ Without intercept --------------------------------------------------

----------------------- binomial with probit and grouping col-------------------------------
DROP TABLE IF EXISTS abalone_binomial_nointercept_out, abalone_binomial_nointercept_out_summary;
SELECT glm(
    'abalone',
    'abalone_binomial_nointercept_out',
    'rings < 10',
    'ARRAY[length, diameter, height, whole, shucked, viscera, shell]',
    'family=binomial, link=probit', NULL, 'max_iter=1000, tolerance=1e-16'
);

-- Test probabilities
DROP TABLE IF EXISTS glm_predict_binomial_probit_out; CREATE TABLE glm_predict_binomial_probit_out as SELECT id, glm_predict(coef, ARRAY[length, diameter, height, whole, shucked, viscera, shell], 'probit')
FROM abalone_binomial_nointercept_out, abalone;
SELECT test_pmml_output('abalone', 'abalone_binomial_nointercept_out', 'glm_predict_binomial_probit_out', 'id', 'glm_predict', 'probability_true');

-- Test output category
DROP TABLE IF EXISTS glm_predict_binomial_probit_out; CREATE TABLE glm_predict_binomial_probit_out as SELECT id, glm_predict_binomial(coef, ARRAY[length, diameter, height, whole, shucked, viscera, shell], 'probit')
FROM abalone_binomial_nointercept_out, abalone;
SELECT test_pmml_output('abalone', 'abalone_binomial_nointercept_out', 'glm_predict_binomial_probit_out', 'id', 'glm_predict_binomial', 'predicted_(rings < 10)_pmml_prediction');

----------------------- binomial with logit -------------------------------
DROP TABLE IF EXISTS abalone_binomial_nointercept_logit_out, abalone_binomial_nointercept_logit_out_summary;
SELECT glm(
    'abalone',
    'abalone_binomial_nointercept_logit_out',
    'rings < 10',
    'ARRAY[length, diameter, height, whole, shucked, viscera, shell]',
    'family=binomial, link=logit', NULL, 'max_iter=1000, tolerance=1e-16'
);

-- Test probabilities
DROP TABLE IF EXISTS glm_predict_binomial_logit_out; CREATE TABLE glm_predict_binomial_logit_out as SELECT id, glm_predict(coef, ARRAY[length, diameter, height, whole, shucked, viscera, shell], 'logit')
FROM abalone_binomial_nointercept_logit_out, abalone;
SELECT test_pmml_output('abalone', 'abalone_binomial_nointercept_logit_out', 'glm_predict_binomial_logit_out', 'id', 'glm_predict', 'probability_true');

-- Test output category
DROP TABLE IF EXISTS glm_predict_binomial_logit_out; CREATE TABLE glm_predict_binomial_logit_out as SELECT id, glm_predict_binomial(coef, ARRAY[length, diameter, height, whole, shucked, viscera, shell], 'logit')
FROM abalone_binomial_nointercept_logit_out, abalone;
SELECT test_pmml_output('abalone', 'abalone_binomial_nointercept_logit_out', 'glm_predict_binomial_logit_out', 'id', 'glm_predict_binomial', 'predicted_(rings < 10)_pmml_prediction');


------------------------------------------------ with 0 intercept --------------------------------------------------
DROP TABLE IF EXISTS abalone_binomial_zerointercept_out, abalone_binomial_zerointercept_out_summary;
SELECT glm(
    'abalone',
    'abalone_binomial_zerointercept_out',
    'rings < 10',
    'ARRAY[0, length, diameter, height, whole, shucked, viscera, shell]',
    'family=binomial, link=probit', NULL, 'max_iter=1000, tolerance=1e-16'
);

-- Test probabilities
DROP TABLE IF EXISTS glm_predict_binomial_probit_out; CREATE TABLE glm_predict_binomial_probit_out as SELECT id, glm_predict(coef, ARRAY[0, length, diameter, height, whole, shucked, viscera, shell], 'probit')
FROM abalone_binomial_zerointercept_out, abalone;
SELECT test_pmml_output('abalone', 'abalone_binomial_zerointercept_out', 'glm_predict_binomial_probit_out', 'id', 'glm_predict', 'probability_true');

-- Test output category
DROP TABLE IF EXISTS glm_predict_binomial_probit_out; CREATE TABLE glm_predict_binomial_probit_out as SELECT id, glm_predict_binomial(coef, ARRAY[0, length, diameter, height, whole, shucked, viscera, shell], 'probit')
FROM abalone_binomial_zerointercept_out, abalone;
SELECT test_pmml_output('abalone', 'abalone_binomial_zerointercept_out', 'glm_predict_binomial_probit_out', 'id', 'glm_predict_binomial', 'predicted_(rings < 10)_pmml_prediction');
