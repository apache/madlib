\i m4_regexp(MADLIB_LIBRARY_PATH,
             `\(.*\)/lib',
              `\1/../modules/pmml/test/pmml.setup.sql_in'
)

m4_changequote(`<!'', `!>'')

------------ with intercept ------------------------------------
DROP TABLE IF EXISTS abalone_out, abalone_out_summary;
SELECT glm(
    'abalone',
    'abalone_out',
    'rings',
    'ARRAY[1, length, diameter, height, whole, shucked, viscera, shell]',
    'family=inverse_gaussian, link=sqr_inverse', NULL, 'max_iter=1000, tolerance=1e-16'
);

DROP TABLE IF EXISTS glm_predict_inverse_gaussian_out; CREATE TABLE glm_predict_inverse_gaussian_out as SELECT id, glm_predict(coef, ARRAY[1, length, diameter, height, whole, shucked, viscera, shell], 'sqr_inverse')
FROM abalone_out, abalone;
SELECT test_pmml_output('abalone', 'abalone_out', 'glm_predict_inverse_gaussian_out', 'id', 'glm_predict', 'predicted_rings_pmml_prediction');

------------ without intercept ------------------------------------
DROP TABLE IF EXISTS abalone_out_nointercept, abalone_out_nointercept_summary;
SELECT glm(
    'abalone',
    'abalone_out_nointercept',
    'rings',
    'ARRAY[length, diameter, height, whole, shucked, viscera, shell]',
    'family=inverse_gaussian, link=inverse',NULL, 'max_iter=1000, tolerance=1e-16'
);

DROP TABLE IF EXISTS glm_predict_inverse_gaussian_out; CREATE TABLE glm_predict_inverse_gaussian_out as SELECT id, glm_predict(coef, ARRAY[length, diameter, height, whole, shucked, viscera, shell], 'inverse')
FROM abalone_out_nointercept, abalone;
SELECT test_pmml_output('abalone', 'abalone_out_nointercept', 'glm_predict_inverse_gaussian_out', 'id', 'glm_predict', 'predicted_rings_pmml_prediction');


----------- with 0 intercept ---------------------------------------
DROP TABLE IF EXISTS abalone_out_zerointercept, abalone_out_zerointercept_summary;
SELECT glm(
    'abalone',
    'abalone_out_zerointercept',
    'rings',
    'ARRAY[0, length, diameter, height, whole, shucked, viscera, shell]',
    'family=inverse_gaussian, link=inverse', NULL, 'max_iter=1000, tolerance=1e-16'
);

DROP TABLE IF EXISTS glm_predict_inverse_gaussian_out; CREATE TABLE glm_predict_inverse_gaussian_out as SELECT id, glm_predict(coef, ARRAY[0, length, diameter, height, whole, shucked, viscera, shell], 'inverse')
FROM abalone_out_zerointercept, abalone;
SELECT test_pmml_output('abalone', 'abalone_out_zerointercept', 'glm_predict_inverse_gaussian_out', 'id', 'glm_predict', 'predicted_rings_pmml_prediction');

DROP TABLE IF EXISTS abalone_out_zerointercept, abalone_out_zerointercept_summary;
SELECT glm(
    'abalone',
    'abalone_out_zerointercept',
    'rings',
    'ARRAY[0.0, length, diameter, height, whole, shucked, viscera, shell]',
    'family=inverse_gaussian, link=inverse', NULL, 'max_iter=1000, tolerance=1e-16'
);

DROP TABLE IF EXISTS glm_predict_inverse_gaussian_out; CREATE TABLE glm_predict_inverse_gaussian_out as SELECT id, glm_predict(coef, ARRAY[0, length, diameter, height, whole, shucked, viscera, shell], 'inverse')
FROM abalone_out_zerointercept, abalone;
SELECT test_pmml_output('abalone', 'abalone_out_zerointercept', 'glm_predict_inverse_gaussian_out', 'id', 'glm_predict', 'predicted_rings_pmml_prediction');
