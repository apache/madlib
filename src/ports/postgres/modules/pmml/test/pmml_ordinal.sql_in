\i m4_regexp(MADLIB_LIBRARY_PATH,
             `\(.*\)/lib',
              `\1/../modules/pmml/test/pmml.setup.sql_in'
)

m4_changequote(`<!'', `!>'')

-- create table for training
DROP TABLE IF EXISTS "Ordinal_test";
CREATE TABLE "Ordinal_test" (
    "FEAT1" INTEGER,
    feat2 INTEGER,
    cat INTEGER,
    g CHAR
);

INSERT INTO "Ordinal_test"("FEAT1", feat2, cat, g) VALUES
(1,35,1,'A'),
(2,33,0,'A'),
(3,39,1,'A'),
(1,37,1,'A'),
(2,31,1,'A'),
(3,36,0,'A'),
(2,36,1,'A'),
(2,31,1,'A'),
(2,41,1,'A'),
(2,37,1,'A'),
(1,44,1,'A'),
(3,33,2,'A'),
(1,31,1,'A'),
(2,44,1,'A'),
(1,35,1,'A'),
(1,44,0,'A'),
(1,46,0,'A'),
(2,46,1,'A'),
(2,46,2,'A'),
(3,49,1,'A'),
(2,39,0,'A'),
(2,44,1,'A'),
(1,47,1,'A'),
(1,44,1,'A'),
(1,37,2,'A'),
(3,38,2,'A'),
(1,49,0,'A'),
(2,44,0,'A'),
(1,41,2,'A'),
(1,50,2,'A'),
(2,44,0,'A'),
(1,39,1,'A'),
(1,40,2,'A'),
(1,46,2,'A'),
(2,41,1,'A'),
(2,39,1,'A'),
(2,33,1,'A'),
(3,59,2,'A'),
(1,41,0,'A'),
(2,47,2,'A'),
(2,31,0,'A'),
(3,42,2,'A'),
(1,55,2,'A'),
(3,40,1,'A'),
(1,44,2,'A'),
(1,54,1,'A'),
(2,46,1,'A'),
(1,54,0,'A'),
(2,42,1,'A'),
(2,49,2,'A'),
(2,41,2,'A'),
(2,41,1,'A'),
(1,44,0,'A'),
(1,57,2,'A'),
(2,52,2,'A'),
(1,49,0,'A'),
(3,41,2,'A'),
(3,57,0,'A'),
(1,62,1,'A'),
(3,33,0,'A'),
(2,54,1,'A'),
(2,40,2,'A'),
(3,52,2,'A'),
(2,57,1,'A'),
(2,49,1,'A'),
(2,46,1,'A'),
(1,57,0,'A'),
(2,49,2,'A'),
(2,52,2,'A'),
(2,53,0,'A'),
(3,54,2,'A'),
(2,57,2,'A'),
(3,41,2,'A'),
(1,52,0,'A'),
(2,57,1,'A'),
(1,54,0,'A'),
(2,52,1,'A'),
(2,52,0,'A'),
(2,44,0,'A'),
(2,46,2,'A'),
(1,49,1,'A'),
(2,54,2,'A'),
(3,52,2,'A'),
(1,44,0,'A'),
(3,49,1,'A'),
(1,46,2,'A'),
(2,54,0,'A'),
(2,39,0,'A'),
(2,59,0,'A'),
(2,45,1,'A'),
(3,52,1,'A'),
(3,54,0,'A'),
(3,44,1,'A'),
(2,50,2,'A'),
(2,62,1,'A'),
(2,59,0,'A'),
(2,52,2,'A'),
(2,52,1,'A'),
(2,46,1,'A'),
(2,41,0,'A'),
(2,52,2,'A'),
(2,52,1,'A'),
(2,55,1,'A'),
(2,41,1,'A'),
(2,49,0,'A'),
(1,59,2,'A'),
(1,54,0,'A'),
(2,54,0,'A'),
(2,59,2,'A'),
(2,55,2,'A'),
(1,62,2,'A'),
(2,54,2,'A'),
(2,54,2,'A'),
(2,54,2,'A'),
(2,59,2,'A'),
(2,57,1,'A'),
(3,61,2,'A'),
(3,52,2,'A'),
(2,59,2,'A'),
(2,62,2,'A'),
(1,60,1,'A'),
(2,59,2,'A'),
(2,65,2,'A'),
(3,61,2,'A'),
(2,59,2,'A'),
(3,59,2,'A'),
(2,59,2,'A'),
(2,59,2,'A'),
(2,65,2,'A'),
(3,57,2,'A'),
(2,59,2,'A'),
(3,49,2,'A'),
(1,49,0,'A'),
(3,59,2,'A'),
(2,62,2,'A'),
(3,59,0,'A'),
(2,54,2,'A'),
(3,63,2,'A'),
(1,43,2,'A'),
(3,54,2,'A'),
(3,52,2,'A'),
(1,57,2,'A'),
(2,57,0,'A'),
(2,57,0,'A'),
(2,61,2,'A'),
(2,62,0,'A'),
(2,62,0,'A'),
(1,65,0,'A'),
(2,57,2,'A'),
(3,59,2,'A'),
(2,59,2,'A'),
(3,62,2,'A'),
(2,65,2,'B'),
(2,62,1,'B'),
(1,62,0,'B'),
(2,62,2,'B'),
(3,54,2,'B'),
(3,62,2,'B'),
(1,65,2,'B'),
(3,62,2,'B'),
(3,67,0,'B'),
(3,65,0,'B'),
(1,60,2,'B'),
(3,59,2,'B'),
(2,59,2,'B'),
(2,59,1,'B'),
(3,65,0,'B'),
(3,62,2,'B'),
(3,65,2,'B'),
(3,59,0,'B'),
(1,59,0,'B'),
(3,61,2,'B'),
(1,65,2,'B'),
(3,67,1,'B'),
(3,65,2,'B'),
(1,65,2,'B'),
(2,67,2,'B'),
(1,65,2,'B'),
(1,62,2,'B'),
(3,52,2,'B'),
(3,63,2,'B'),
(2,59,2,'B'),
(3,65,2,'B'),
(2,59,0,'B'),
(3,67,2,'B'),
(3,67,2,'B'),
(3,60,2,'B'),
(3,67,2,'B'),
(3,62,2,'B'),
(2,54,2,'B'),
(3,65,2,'B'),
(3,62,2,'B'),
(2,59,2,'B'),
(3,60,2,'B'),
(3,63,2,'B'),
(3,65,2,'B'),
(2,63,1,'B'),
(2,67,2,'B'),
(2,65,2,'B'),
(2,62,2,'B');
ALTER TABLE "Ordinal_test" ADD COLUMN id SERIAL;

-- logit
drop table if exists ordinal_logit, ordinal_logit_summary;
SELECT ordinal(
    '"Ordinal_test"',
    'ordinal_logit',
    'cat',
    'ARRAY["FEAT1", feat2]',
    '0<1<2',
    'logit'
    );
DROP TABLE IF EXISTS ordinal_predict_out; SELECT ordinal_predict('ordinal_logit','"Ordinal_test"', 'ordinal_predict_out', 'probability');
SELECT test_pmml_output('"Ordinal_test"', 'ordinal_logit', 'ordinal_predict_out', 'id', '0', 'probability_0');
SELECT test_pmml_output('"Ordinal_test"', 'ordinal_logit', 'ordinal_predict_out', 'id', '1', 'probability_1');
SELECT test_pmml_output('"Ordinal_test"', 'ordinal_logit', 'ordinal_predict_out', 'id', '2', 'probability_2');

DROP TABLE IF EXISTS ordinal_predict_out; SELECT ordinal_predict('ordinal_logit','"Ordinal_test"', 'ordinal_predict_out', 'response');
SELECT test_pmml_output('"Ordinal_test"', 'ordinal_logit', 'ordinal_predict_out', 'id', 'category', 'predicted_cat_pmml_prediction');


-- probit
drop table if exists ordinal_probit, ordinal_probit_summary;
SELECT ordinal(
    '"Ordinal_test"',
    'ordinal_probit',
    'cat',
    'ARRAY["FEAT1", feat2]',
    '2<0<1',
    'probit'
    );
DROP TABLE IF EXISTS ordinal_predict_out; SELECT ordinal_predict('ordinal_probit','"Ordinal_test"', 'ordinal_predict_out', 'probability');
SELECT test_pmml_output('"Ordinal_test"', 'ordinal_probit', 'ordinal_predict_out', 'id', '0', 'probability_0');
SELECT test_pmml_output('"Ordinal_test"', 'ordinal_probit', 'ordinal_predict_out', 'id', '1', 'probability_1');
SELECT test_pmml_output('"Ordinal_test"', 'ordinal_probit', 'ordinal_predict_out', 'id', '2', 'probability_2');

DROP TABLE IF EXISTS ordinal_predict_out; SELECT ordinal_predict('ordinal_probit','"Ordinal_test"', 'ordinal_predict_out', 'response');
SELECT test_pmml_output('"Ordinal_test"', 'ordinal_probit', 'ordinal_predict_out', 'id', 'category', 'predicted_cat_pmml_prediction');


--------- grouping ----------------
drop table if exists ordinal_logit_grp, ordinal_logit_grp_summary;
SELECT ordinal(
    '"Ordinal_test"',
    'ordinal_logit_grp',
    'cat',
    'ARRAY["FEAT1", feat2]',
    '0<1<2',
    'logit',
    'g'
    );
DROP TABLE IF EXISTS ordinal_predict_out; SELECT ordinal_predict('ordinal_logit_grp','"Ordinal_test"', 'ordinal_predict_out', 'probability',FALSE);
DROP TABLE IF EXISTS ordinal_predict_grp_out; CREATE TABLE ordinal_predict_grp_out as (SELECT a.id, a.g, b."0", b."1", b."2", a."FEAT1", a.feat2 FROM "Ordinal_test" AS a LEFT JOIN ordinal_predict_out AS b on a.id =b.id);
SELECT test_pmml_output('"Ordinal_test"', 'ordinal_logit_grp', 'ordinal_predict_grp_out', 'id', '0', 'probability_0','g');

DROP TABLE IF EXISTS ordinal_predict_out; SELECT ordinal_predict('ordinal_logit_grp','"Ordinal_test"', 'ordinal_predict_out', 'response',FALSE);
DROP TABLE IF EXISTS ordinal_predict_grp_out; CREATE TABLE ordinal_predict_grp_out as (SELECT a.id, a.g, b.category FROM "Ordinal_test" AS a LEFT JOIN ordinal_predict_out AS b on a.id =b.id);
SELECT test_pmml_output('"Ordinal_test"', 'ordinal_logit_grp', 'ordinal_predict_grp_out', 'id', 'category', 'predicted_cat_pmml_prediction', 'g');


